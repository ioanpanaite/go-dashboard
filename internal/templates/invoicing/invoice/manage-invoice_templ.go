// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.648
package invoice_view

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "kub/dashboardES/internal/models"
import "kub/dashboardES/internal/templates/layout"
import "fmt"

type ManageInvoiceViewData struct {
	CompanyCharges  []models.InvoiceCharge
	Company         models.Company
	EmployeeCharges []models.InvoiceCharge
	EmployeeNames   map[string]string
	Module          string
	Page            string
}

func ManageInvoiceView(data ManageInvoiceViewData) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css\"><script type=\"text/javascript\" src=\"https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js\"></script> <script type=\"text/javascript\" src=\"https://cdn.datatables.net/select/1.3.4/js/dataTables.select.min.js\"></script> <div class=\"p-4\"><h5 class=\"hidden text-center py-1\" id=\"notice\">Please wait, page is loading...</h5><div class=\"flex justify-end px-4 pb-2\"><input class=\"hidden\" id=\"companyId\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.Company.Id))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 26, Col: 83}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"> <input class=\"hidden\" id=\"year\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.CompanyCharges[0].Year))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 27, Col: 90}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"> <input class=\"hidden\" id=\"month\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.CompanyCharges[0].Month))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 28, Col: 92}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><div class=\"grow\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, setEditBtnHeaders(data.Company))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<sl-button id=\"invoiceEditBtn\" class=\"filterable-hx-rows\" hx-trigger=\"click delay:50ms\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/panels/invoicing/invoice/form/%d", data.CompanyCharges[0].InvoiceID.Int64))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 34, Col: 102}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-indicator=\".htmx-indicator\" variant=\"primary\" hx-on::before-request=\"document.getElementById(&#39;invoiceEditBtn&#39;).loading=true;\" hx-on::after-request=\"document.getElementById(&#39;invoiceEditBtn&#39;).loading=false;showEditMode();\" onclick=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 templ.ComponentScript = setEditBtnHeaders(data.Company)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var7.Call)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-target=\"#invoiceEditContent\" hx-swap=\"innerHTML\" size=\"medium\">Edit Internal Invoice</sl-button><div id=\"editActionBtnCtn\" class=\"gap-3 hidden\"><sl-button id=\"invoiceActionBtn\" hx-trigger=\"click delay:50ms\" hx-swap=\"none\" hx-post=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/panels/invoicing/invoice/%d", data.CompanyCharges[0].InvoiceID.Int64))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 51, Col: 99}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-on::before-request=\"document.getElementById(&#39;invoiceActionBtn&#39;).loading=true;\" hx-on::after-request=\"window.location.reload(); document.getElementById(&#39;notice&#39;).classList.remove(&#39;hidden&#39;);\" hx-indicator=\".htmx-indicator\" variant=\"success\" size=\"medium\">Update Invoice</sl-button><sl-tooltip placement=\"top\" content=\"Exit edit mode\"><sl-button size=\"medium\" variant=\"danger\" onclick=\"exitEditMode()\"><sl-icon name=\"x-lg\"></sl-icon></sl-button></sl-tooltip></div></div><div id=\"controlBox\" class=\"text-sm px-8 hidden w-full justify-start items-end pb-2 gap-4\"><div class=\"pb-3\"><sl-switch size=\"small\" id=\"toggleSelectedRows\">See Selection</sl-switch></div><div class=\"grow\"></div><div class=\"flex gap-3 items-end\"><div class=\"flex flex-col\"><label for=\"invFromDate\">From:</label> <input class=\"border border-gray-400 p-1 rounded\" type=\"date\" id=\"invFromDate\" class=\"w-32 border rounded\"></div><div class=\"flex flex-col\"><label for=\"invToDate\">To:</label> <input class=\"border border-gray-400 p-1 rounded\" type=\"date\" id=\"invToDate\" class=\"w-32 border rounded\"></div><sl-button size=\"small\" id=\"AddRangeBtn\" variant=\"primary\" class=\"\">Add Range</sl-button></div></div><div class=\"border-b-[1px] border-b-gray-300 mx-5 pb-2\"></div><div id=\"invoiceEditContent\" class=\"hidden\"></div><div id=\"invoiceUnEditContent\"><div class=\"border border-gray-300 rounded mx-5\"><div class=\"bg-black text-white py-2 px-4 flex items-center rounded-t-lg\"><h2 class=\"font-semibold\">Company Charges</h2><div class=\"grow\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, toggleTable("companyCharges"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button type=\"button\" onclick=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 templ.ComponentScript = toggleTable("companyCharges")
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var9.Call)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"pl-4\"><i id=\"companyChargesShowIcon\" class=\"fas fa-chevron-up\"></i></button></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(data.CompanyCharges) == 0 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-center py-2\"><p class=\"font-semibold\">No charges found</p></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<table class=\"w-full\" id=\"companyCharges\"><thead><tr><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">ID</th><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">Type</th><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">Date</th><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">Amount</th></tr></thead> <tbody>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				for _, charge := range data.CompanyCharges {
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<tr class=\"\"><td class=\"px-1 py-1 border-b border-gray-200 text-sm\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var10 string
					templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", charge.ID))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 132, Col: 95}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"px-1 py-1 border-b border-gray-200 text-sm\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var11 string
					templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(charge.ChargesDefTypesName)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 133, Col: 93}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"px-1 py-1 border-b border-gray-200 text-sm\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var12 string
					templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(charge.Date)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 134, Col: 78}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"px-1 py-1 border-b border-gray-200 text-sm\"><sl-format-number type=\"currency\" currency=\"AED\" value=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var13 string
					templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%f", charge.Amount))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 139, Col: 52}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" lang=\"en-US\"></sl-format-number></td></tr>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tbody></table>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"border border-gray-300 rounded mx-5 mt-6 mb-4\"><div class=\"bg-black text-white py-2 px-4 flex items-center rounded-t-lg\"><h2 class=\"font-semibold\">Employee Charges</h2><div class=\"grow\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, toggleTable("employeeCharges"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button type=\"button\" onclick=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 templ.ComponentScript = toggleTable("employeeCharges")
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var14.Call)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"pl-4\"><i id=\"employeeChargesShowIcon\" class=\"fas fa-chevron-up\"></i></button></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(data.EmployeeCharges) == 0 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-center py-2\"><p class=\"font-semibold\">No charges found</p></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<table class=\"w-full\" id=\"employeeCharges\"><thead><tr><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">ID</th><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">Employee</th><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">Type</th><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">Date</th><th class=\"px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider\">Amount</th></tr></thead> <tbody>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				for _, eCharge := range data.EmployeeCharges {
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<tr class=\"\"><td class=\"px-1 py-1 border-b border-gray-200 text-sm\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var15 string
					templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", eCharge.ID))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 187, Col: 96}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"px-1 py-1 border-b border-gray-200 text-sm\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var16 string
					templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(data.EmployeeNames[eCharge.ReferenceUUID])
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 188, Col: 108}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"px-1 py-1 border-b border-gray-200 text-sm\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var17 string
					templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(eCharge.ChargesDefTypesName)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 189, Col: 94}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"px-1 py-1 border-b border-gray-200 text-sm\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var18 string
					templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(eCharge.Date)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 190, Col: 79}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"px-1 py-1 border-b border-gray-200 text-sm\"><sl-format-number type=\"currency\" currency=\"AED\" value=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var19 string
					templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%f", eCharge.Amount))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/invoicing/invoice/manage-invoice.templ`, Line: 195, Col: 53}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" lang=\"en-US\"></sl-format-number></td></tr>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tbody></table>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div><script>\n\tvar jsonData = {}\n\n\tfunction showEditMode(){\n\t\tdocument.getElementById(\"invoiceEditBtn\").classList.add(\"hidden\");\n\t\tvar editCtn = document.getElementById(\"editActionBtnCtn\")\n\t\tvar controlBox = document.getElementById(\"controlBox\")\n\t\tcontrolBox.classList.remove(\"hidden\");\n\t\tcontrolBox.classList.add(\"flex\")\n\t\teditCtn.classList.remove(\"hidden\");\n\t\teditCtn.classList.add(\"flex\");\n\t\tdocument.getElementById(\"invoiceEditContent\").classList.remove(\"hidden\");\n\t\tdocument.getElementById(\"invoiceUnEditContent\").classList.add(\"hidden\");\n\t}\n\n\tfunction exitEditMode(){\n\t\tdocument.getElementById(\"invoiceEditBtn\").classList.remove(\"hidden\");\n\t\tvar editCtn = document.getElementById(\"editActionBtnCtn\")\n\t\tvar controlBox = document.getElementById(\"controlBox\")\n\t\tcontrolBox.classList.add(\"hidden\");\n\t\tcontrolBox.classList.remove(\"flex\")\n\t\teditCtn.classList.add(\"hidden\");\n\t\teditCtn.classList.remove(\"flex\");\n\t\tdocument.getElementById(\"invoiceEditContent\").classList.add(\"hidden\");\n\t\tdocument.getElementById(\"invoiceUnEditContent\").classList.remove(\"hidden\");\n\t}\n\n//Update btn clicked\n\tdocument.getElementById('#invoiceActionBtn').addEventListener(\"click\", function(){\n\t\tvar btn = document.getElementById(\"invoiceActionBtn\");\n\t\tjsonData.year = document.getElementById(\"year\").value;\n  \t\tjsonData.month = document.getElementById(\"month\").value;\n\t\tjsonData.companyId = document.getElementById(\"companyId\").value;\n\t\t//called from global function\n\t\tjsonData.selections = getSelectedCharges();\n\t\tif (!jsonData.selections.length){\n\t\t\talert(\"Please select charges to update invoice\")\n\t\t\treturn\n\t\t}\n\t\tbtn.setAttribute(\"hx-headers\",JSON.stringify(jsonData))\n\t  })\n\n\t//Filter button click listener\n\tdocument.getElementById(\"filterButton\").addEventListener(\"click\", function() {\n\t\tif (document.getElementById(\"editActionBtnCtn\").classList.contains(\"hidden\")){\n\t\t\treturn;\n\t\t}\n\t\tvar editModeBtn = document.getElementById(\"invoiceEditBtn\");\n\t\teditModeBtn.click();\n\t});\n\n\t///Toggle SelectedRows ///////////////\n\t//toggleSelectedRows\n\tconst toggleSelected = document.getElementById(\"toggleSelectedRows\")\n\ttoggleSelected.addEventListener('sl-change', () => {\n\t// tables\n\t\tvar cTable = document.querySelectorAll('#companyCharges tr');\n\t\tvar eTable = document.querySelectorAll('#employeeCharges tr');\n\t\tvar pTable = document.querySelectorAll('#pemployeeCharges tr');\n\t\tdocument.getElementById(\"employeeTableIds\").dataset.index.split(\",\").forEach(function(tableId){\n\t\t\tvar ppTable = document.querySelectorAll(`#${tableId} tr`);\n\t\t\tvar eeTable = document.querySelectorAll(`#p${tableId} tr`);\n\t\t\tif(toggleSelected.checked){\n\t\t\t\t\ttoggleSel(eeTable)\n\t\t\t\t\ttoggleSel(ppTable)\n\n\t\t\t\t}else{\n\t\t\t\t\tshowAll(eeTable)\n\t\t\t\t\tshowAll(ppTable)\n\n\t\t\t\t}\n\t\t})\n\n\t\tif(toggleSelected.checked){\n\t\ttoggleSel(cTable)\n\t\ttoggleSel(eTable)\n\t\ttoggleSel(pTable)\n\n\t}else{\n\t\tshowAll(cTable)\n\t\tshowAll(eTable)\n\t\tshowAll(pTable)\n\n\t}\n\t  function toggleSel(elements) {\n        elements.forEach((row) => {\n           if (!row.classList.contains(\"selected\")){\n\t\t\trow.classList.add(\"hidden\")\n\t\t   }\n        });\n    }\n\t\tfunction showAll(elements){\n\t\t\telements.forEach((row)=>{\n\t\t\t\trow.classList.remove(\"hidden\")\n\t\t\t})\n\t\t}\n\t})\n\n///Date Range ////////////\n  var fromDate = document.getElementById(\"invFromDate\");\n  var toDate = document.getElementById(\"invToDate\");\n\n  fromDate.setAttribute(\"max\", new Date().toISOString().split('T')[0]);\n  toDate.setAttribute(\"max\", new Date().toISOString().split('T')[0]);\n\tfromDate.addEventListener(\"change\", function (e) {\n\t\tfromDate.value = formatDate(new Date(e.target.value));\n\t});\n\ttoDate.addEventListener(\"change\", function (e) {\n\t\ttoDate.value = formatDate(new Date(e.target.value));\n\t});\n\n\t//Add range btn\n\tdocument.getElementById(\"AddRangeBtn\").addEventListener(\"click\",()=>{\n\t\tvar fDate = new Date(fromDate.value)\n\t\tvar tDate = new Date(toDate.value)\n\t\tif(fDate.toString() ===\"Invalid Date\" || tDate.toString() ===\"Invalid Date\" || fDate > tDate){\n\t\t\talert(\"Invalid date range\");\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t//Init table props\n\t\tvar companyTable = document.querySelectorAll(\"#companyCharges tbody tr td.date\")\n\t\tvar employeeTable = document.querySelectorAll(\"#employeeCharges tbody tr td.date\")\n\t\tvar payrollTable = document.querySelectorAll(\"#pemployeeCharges tbody tr td.selected\")\n\t\tperformSelection(companyTable,\"cCharge\")\n\t\tperformSelection(employeeTable,\"eCharge\")\n\t\tdocument.getElementById(\"employeeTableIds\").dataset.index.split(\",\").forEach(function(tableId){\n\t\t\ttry {\n\t\t\t//Grouped Employee Charges\n\t\t\tvar eTable = document.querySelectorAll(`#${tableId} tbody tr td.date`)\n\t\t\tperformSelection(eTable,`${tableId}-epCharge`)\n\t\t\t//Grouped Employee Payroll\n\t\t\tvar pTable = document.querySelectorAll(`#p${tableId} tbody tr td.date`)\n\t\t\tperformSelection(pTable,`p${tableId}-pCharge`)\n\t\t\t}catch (e){\n\t\t\t\t//handle error\n\t\t\t\tconsole.log(\"Table is empty\")\n\t\t\t}\n\t\t})\n\t\tperformSelection(payrollTable,\"pCharge\")\n\n\t}catch (e){\n\t\t//handle error\n\t\t\t\tconsole.log(\"Table is empty\")\n\t\t\t}\n\n\t\tfunction performSelection(data,id){\n\t\tfor (var i=0; i < data.length;i++){\n\t\t\tvar date = new Date(data[i].innerHTML)\n\t\t\tif (fDate <= date && tDate>=date ) {\n\t\t\t\tdocument.getElementById(`${id}-${i}`).classList.add(\"bg-blue-100\", \"selected\")\n\t\t\t\tdocument.getElementById(`check-${id}-${i}`).checked = true\n\t\t\t}\n\t\t}\t\n\t}\n\t})\n\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base(false, data.Module, data.Page).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func setEditBtnHeaders(data models.Company) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_setEditBtnHeaders_a46d`,
		Function: `function __templ_setEditBtnHeaders_a46d(data){var editBtn = document.getElementById("invoiceEditBtn")
	var jsonData = {}
	jsonData.companyId= data.Id
	jsonData.uuidList = data.Uuid
	editBtn.setAttribute("hx-headers",JSON.stringify(jsonData))
}`,
		Call:       templ.SafeScript(`__templ_setEditBtnHeaders_a46d`, data),
		CallInline: templ.SafeScriptInline(`__templ_setEditBtnHeaders_a46d`, data),
	}
}
