package invoice_view

import "kub/dashboardES/internal/templates/layout"
import "kub/dashboardES/internal/models"
import "fmt"

// import "fmt"

type InvoiceViewData struct {
	Module    string
	Companies []models.Company
	Page      string
	Route     string
}

templ InvoiceView(data InvoiceViewData) {
	<style>
	.choices{
		width: 250px !important; 
	}
	</style>
	@layout.Base(false, data.Module, data.Page) {
		//choices import
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css"/>
		<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
		<div id="invoiceTable" class="mx-auto">
			<!-- Tab Headers -->
			<div class="bg-gray-300 py-1">
				<ul class="flex">
					<li class="ml-1">
						<button
							id="tab1"
							class="tab-button bg-black text-white py-2 px-4 focus:outline-none rounded-md"
							role="tab"
							aria-selected="true"
							aria-controls="panel1"
						>
							Company Invoices
						</button>
					</li>
					<li class="ml-1">
						<button
							id="tab2"
							class="tab-button bg-gray-800 text-white py-2 px-4 focus:outline-none rounded-md"
							role="tab"
							aria-selected="false"
							aria-controls="panel2"
						>
							Client Invoices
						</button>
					</li>
				</ul>
			</div>
			<!-- Company Invoices -->
			<div
				id="panel1"
				class="tab-panel pt-2 container mx-auto"
				role="tabpanel"
				aria-labelledby="tab1"
			>
				<div
					class="container w-full m-2 border-black shadow-lg rounded-md overflow-hidden"
				>
					<div class="bg-black text-white py-2 px-4 flex items-center">
						<h2 class="font-semibold">Company Invoices</h2>
						<div class="grow"></div>
						<div class="flex bg-gray-800">
							<sl-button
								class="hidden"
								size="small"
								id="prevPageEmployee"
								type="submit"
							>
								<i class="fas fa-chevron-left"></i>
							</sl-button>
							<sl-input
								class="hidden w-12"
								id="employeePage"
								size="small"
								min="0"
								step="1"
								type="number"
								readonly
								value="0"
							></sl-input>
							<sl-button
								class="hidden"
								size="small"
								id="nextPageEmployee"
								type="submit"
							>
								<i class="fas fa-chevron-right"></i>
							</sl-button>
						</div>
						<div class="w-2"></div>
						<sl-button
							size="small"
							id="Add-invoice"
							onclick={ showCreateInvoice() }
						>
							Create Invoice
						</sl-button>
						<div class="w-2"></div>
						<button
							id="companyInvoiceRefresh"
							class="filterable-hx-rows bg-white hover:bg-blue-50 rounded p-2"
							hx-get={ "/panels/invoicing/invoice/search" }
							hx-trigger="click"
							hx-target="#company-invoice-tbody"
							hx-swap="innerHTML"
							hx-indicator=".htmx-indicator"
						>
							<sl-icon class="text-gray-700 hover:text-blue-700 text-md" name="arrow-clockwise"></sl-icon>
						</button>
					</div>
					<table class="min-w-full leading-normal">
						<thead>
							<tr>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<div class="flex flex-col">
										<span>Reference</span>
									</div>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<div class="flex flex-col">
										<span>Company</span>
									</div>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<div class="flex flex-col">
										<span>Peroid</span>
									</div>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<div class="flex flex-col">
										<span>Created At</span>
									</div>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>Amount</span>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>State</span>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>Actions</span>
								</th>
							</tr>
						</thead>
						<tbody
							id="company-invoice-tbody"
							class="filterable-hx-rows"
							hx-get={ "/panels/invoicing/invoice/search" }
							hx-trigger="filterUpdateEvent"
							hx-target="#company-invoice-tbody"
							hx-swap="innerHTML"
							hx-indicator=".htmx-indicator"
						>
							<td
								colspan="12"
								class="px-1 py-1 border-b border-gray-200 text-sm text-center h-20"
								id="spinner"
							>
								Filter to show results
								<!-- <sl-spinner class="text-2xl m-5"></sl-spinner> -->
							</td>
						</tbody>
					</table>
					<div class="bg-black min-h-4 p-2 flex"></div>
				</div>
			</div>
			////////////////////////////
			<!-- Client Invoices -->
			<div
				id="panel2"
				class="tab-panel hidden pt-2 container mx-auto"
				role="tabpanel"
				aria-labelledby="tab2"
			>
				<div
					class="container w-full m-2 border-black shadow-lg rounded-md overflow-hidden"
				>
					<div class="bg-black text-white py-2 px-4 flex items-center">
						<h2 class="font-semibold">Client Invoices</h2>
						<div class="grow"></div>
						<div class="flex bg-gray-800">
							<sl-button
								class="hidden"
								size="small"
								id="prevPageEmployee"
								type="submit"
							>
								<i class="fas fa-chevron-left"></i>
							</sl-button>
							<sl-input
								class="hidden w-12"
								id="employeePage"
								size="small"
								min="0"
								step="1"
								type="number"
								readonly
								value="0"
							></sl-input>
							<sl-button
								class="hidden"
								size="small"
								id="nextPageEmployee"
								type="submit"
							>
								<i class="fas fa-chevron-right"></i>
							</sl-button>
						</div>
						<div class="w-2"></div>
						<sl-button
							size="small"
							id="Add-invoice"
							onclick={ showCreateInvoice() }
						>
							Create Invoice
						</sl-button>
						<div class="w-2"></div>
						<button
							size="small"
							id="Refresh-Employee-charges"
							class="filterable-hx-rows bg-white hover:bg-blue-50 rounded p-2"
							hx-get="/panels/invoicing/clientInvoice/search"
							hx-trigger="click"
							hx-target="#employee-invoice-tbody"
							hx-swap="innerHTML"
							hx-indicator=".htmx-indicator"
						>
							<sl-icon class="text-gray-700 hover:text-blue-700 text-md" name="arrow-clockwise"></sl-icon>
						</button>
					</div>
					<table class="min-w-full leading-normal">
						<thead>
							<tr>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<div class="flex flex-col">
										<span>Reference</span>
									</div>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<div class="flex flex-col">
										<span>Client Company</span>
									</div>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>Date</span>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>Paid At</span>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>Amount</span>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>Template</span>
								</th>
								<th
									class="px-2 py-2 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider"
								>
									<span>Actions</span>
								</th>
							</tr>
						</thead>
						// hx-headers='{"companyId": "{{ .Data.companyId }}", "type": "employee"}'
						<tbody
							id="employee-invoice-tbody"
							class="filterable-hx-rows"
							hx-get={ "/panels/invoicing/clientInvoice/search" }
							hx-trigger="filterUpdateEvent"
							hx-target="#employee-invoice-tbody"
							hx-swap="innerHTML"
							hx-indicator=".htmx-indicator"
						>
							// hx-request="clientInvoice"
							<td
								colspan="12"
								class="px-1 py-1 border-b border-gray-200 text-sm text-center h-20"
								id="spinner"
							>
								Filter to show results
								<!-- <sl-spinner class="text-2xl m-5"></sl-spinner> -->
							</td>
						</tbody>
					</table>
					<div class="bg-black min-h-4 p-2"></div>
				</div>
			</div>
		</div>
		//TODO: Create/Edit Invoice	
		<div id="createInvoiceDialog" class="mx-auto hidden">
			<div class="modal-content bg-white shadow-md rounded pb-2">
				<div class="bg-black flex items-center w-full justify-between py-2 px-4  ">
					<h2 id="invoiceFormTitle" class="text-white font-semibold">Create Invoice</h2>
					<sl-button
						size="small"
						variant="danger"
						onclick={ closeInvoiceForm() }
					>
						Close
					</sl-button>
				</div>
				<div class="flex justify-between items-center gap-10 py-3 px-8">
					<div class="flex flex-col">
						<label for="selCompany">Select a company:</label>
						<select id="selCompany" class="selCompany" style="padding: 5px">
							<option selected disabled value="">Select a Company</option>
							for _, com := range data.Companies {
								<option value={ fmt.Sprintf("%d#%v", com.Id, com.Uuid) }>{ com.Name }</option>
							}
						</select>
					</div>
					<button
						type="button"
						id="getInvoiceFormBtn"
						hx-get={ "/panels/invoicing/invoice/form/new" }
						class="filterable-hx-rows hidden"
						hx-trigger="click delay:50ms"
						hx-target="#invoiceFormContent"
						hx-swap="innerHTML"
						hx-indicator=".htmx-indicator"
					></button>
					<div class="flex items-center justify-center gap-2">
						//Action Btn
						<sl-button
							id="invoiceActionBtn"
							hx-trigger="click delay:50ms"
							hx-post="/panels/invoicing/invoice/new"
							class="filterable-hx-rows"
							hx-indicator=".htmx-indicator"
							hx-swap="none"
							hx-on::before-request="document.getElementById('invoiceActionBtn').loading=true;"
							hx-on::after-request="successAndClose();document.getElementById('companyInvoiceRefresh').click();"
							disabled
							variant="success"
							size="medium"
						>
							Save Internal Invoice
						</sl-button>
					</div>
				</div>
				//Controls
				<div id="controlBox" class="text-sm px-8 hidden w-full items-end pb-2 gap-5">
					<div class="flex flex-col items-start">
						<p class="text-gray-600">Invoice Date:</p>
						<input class="border border-gray-400 p-1 rounded" type="date" id="invoiceDate"/>
					</div>
					<div class="grow"></div>
					<div class="pb-3"><sl-switch size="small" id="toggleSelectedRows">See Selection</sl-switch></div>
					<div class="flex gap-3 items-end">
						<div class="flex flex-col">
							<label for="invFromDate">From:</label>
							<input class="border border-gray-400 p-1 rounded" type="date" id="invFromDate" class="w-32 border rounded"/>
						</div>
						<div class="flex flex-col">
							<label for="invToDate">To:</label>
							<input class="border border-gray-400 p-1 rounded" type="date" id="invToDate" class="w-32 border rounded"/>
						</div>
						<sl-button
							size="small"
							id="AddRangeBtn"
							variant="primary"
							class=""
						>
							Add Range
						</sl-button>
					</div>
					<sl-tooltip placement="top" content="Refresh list">
						<button
							size="small"
							id="companyInvoiceRefresh"
							class="bg-gray-50 border border-gray-300 hover:bg-blue-50 rounded p-2"
							onclick="document.getElementById('getInvoiceFormBtn').click()"
						>
							<sl-icon class="text-gray-700 hover:text-blue-700 text-md" name="arrow-clockwise"></sl-icon>
						</button>
					</sl-tooltip>
				</div>
				<div class="border-b-[1px] border-b-gray-300 mx-5"></div>
				<div id="invoiceFormContent" class="pt-3"></div>
			</div>
		</div>
		<script>
		var choices = null
	function successAndClose(){
		document.getElementById("invoiceActionBtn").loading=false;
			document.getElementById("invoiceFormContent").innerHTML = ""
			document.getElementById("controlBox").classList.add("hidden")
			document.getElementById("invoiceActionBtn").innerHTML = "Save Internal Invoice"
			document.getElementById("invoiceActionBtn").disabled = true
			document.getElementById("invoiceTable").classList.remove("hidden")
			document.getElementById("createInvoiceDialog").classList.add("hidden")
			choices.clearStore();
}
// Invoice form functionality
  document.addEventListener('DOMContentLoaded', function () {
      var selectElement = document.getElementById('selCompany');
       choices = new Choices(selectElement, {
        searchEnabled: true,
        placeholder: false,
		allowHTML:false,
		itemSelectText:"",
        placeholderValue: '',
        maxItemCount: 1,
      });
	  // Add onchange listener
  selectElement.addEventListener('change', function(event) {
	var selCompany = selectElement.value.split("#")
	if (!selCompany[0]){
		return
	}
	var formBtn = document.getElementById("getInvoiceFormBtn");
		jsonData.companyId=selCompany[0];
		jsonData.uuidList=selCompany[1];
		formBtn.setAttribute("hx-headers",JSON.stringify(jsonData));
		formBtn.click();
		document.getElementById("invoiceActionBtn").disabled = false;
		document.getElementById("controlBox").classList.remove("hidden")
		document.getElementById("controlBox").classList.add("flex")
  });


	//Filter button click listener
document.getElementById("filterButton").addEventListener("click", function() {
	if (document.getElementById("createInvoiceDialog").classList.contains("hidden")){
		return;
	}
	if (!selectElement.value){
		alert("Please select a company")
		return;
	}
	var selCompany = selectElement.value.spilt("#")
	var formBtn = document.getElementById("getInvoiceFormBtn");
	jsonData.uuidList = selCompany[1]
	jsonData.companyId= selCompany[0]
	formBtn.setAttribute("hx-headers",JSON.stringify(jsonData));
	formBtn.click();
	document.getElementById("invoiceActionBtn").disabled = false;
	document.getElementById("controlBox").classList.remove("hidden")
	document.getElementById("controlBox").classList.add("flex")
});

	var jsonData = {};
	 
	  document.getElementById('invoiceActionBtn').addEventListener('click',function(){
		var btn = document.getElementById("invoiceActionBtn");
		var date = new Date(document.getElementById("invoiceDate").value);
		jsonData.year = date.getFullYear().toString();
  		jsonData.month = String(date.getMonth() + 1).padStart(2, '0');
		//called from global function
		jsonData.selections = getSelectedCharges();
		if (!jsonData.selections.length){
			alert("Please select charges to create invoice")
			return
		}
		console.log(jsonData)
		btn.setAttribute("hx-headers",JSON.stringify(jsonData))
	  })

    // JavaScript for Tab Functionality
      const tabs = document.querySelectorAll(".tab-button");
      const tabPanels = document.querySelectorAll(".tab-panel");

      tabs.forEach((tab) => {
        tab.addEventListener("click", () => {
          tabs.forEach((t) => {
            t.setAttribute("aria-selected", "false");
            t.classList.remove("bg-black");
            t.classList.add("bg-gray-800");
          });
          tabPanels.forEach((panel) => panel.classList.add("hidden"));

          tab.setAttribute("aria-selected", "true");
          tab.classList.add("bg-black");
          tab.classList.remove("bg-gray-800");
          const panel = document.querySelector(
            `#${tab.getAttribute("aria-controls")}`,
          );
          panel.classList.remove("hidden");
        });
      });

	///Toggle SelectedRows ///////////////
	//toggleSelectedRows
	const toggleSelected = document.getElementById("toggleSelectedRows")
	toggleSelected.addEventListener('sl-change', () => {
	// tables
		var cTable = document.querySelectorAll('#companyCharges tr');
		var eTable = document.querySelectorAll('#employeeCharges tr');
		var pTable = document.querySelectorAll('#pemployeeCharges tr');
		document.getElementById("employeeTableIds").dataset.index.split(",").forEach(function(tableId){
			var ppTable = document.querySelectorAll(`#${tableId} tr`);
			var eeTable = document.querySelectorAll(`#p${tableId} tr`);
			if(toggleSelected.checked){
					toggleSel(eeTable)
					toggleSel(ppTable)

				}else{
					showAll(eeTable)
					showAll(ppTable)

				}
		})

		if(toggleSelected.checked){
		toggleSel(cTable)
		toggleSel(eTable)
		toggleSel(pTable)

	}else{
		showAll(cTable)
		showAll(eTable)
		showAll(pTable)

	}
	  function toggleSel(elements) {
        elements.forEach((row) => {
           if (!row.classList.contains("selected")){
			row.classList.add("hidden")
		   }
        });
    }
		function showAll(elements){
			elements.forEach((row)=>{
				row.classList.remove("hidden")
			})
		}
	})

	//INVOICE DATE//////////
	//Init dates
	var invoiceDate = document.getElementById("invoiceDate");
	invoiceDate.value = formatDate(new Date());
	jsonData.year = invoiceDate.value .getFullYear().toString();
  	jsonData.month = String(invoiceDate.value .getMonth() + 1).padStart(2, '0');
console.log(jsonData)
	invoiceDate.addEventListener("change", function (e) {
		invoiceDate.value = formatDate(new Date(e.target.value));
		jsonData.year = invoiceDate.value .getFullYear().toString();
  		jsonData.month = String(invoiceDate.value .getMonth() + 1).padStart(2, '0');
		console.log(jsonData)
	});

	///Date Range ////////////
  var fromDate = document.getElementById("invFromDate");
  var toDate = document.getElementById("invToDate");

  fromDate.setAttribute("max", new Date().toISOString().split('T')[0]);
  toDate.setAttribute("max", new Date().toISOString().split('T')[0]);
	fromDate.addEventListener("change", function (e) {
		fromDate.value = formatDate(new Date(e.target.value));
	});
	toDate.addEventListener("change", function (e) {
		toDate.value = formatDate(new Date(e.target.value));
	});

	//Add range btn
	document.getElementById("AddRangeBtn").addEventListener("click",()=>{
		var fDate = new Date(fromDate.value)
		var tDate = new Date(toDate.value)
		if(fDate.toString() ==="Invalid Date" || tDate.toString() ==="Invalid Date" || fDate > tDate){
			alert("Invalid date range");
			return;
		}
	try{
		//Init table props
		var companyTable = document.querySelectorAll("#companyCharges tbody tr td.date")
		var employeeTable = document.querySelectorAll("#employeeCharges tbody tr td.date")
		var payrollTable = document.querySelectorAll("#pemployeeCharges tbody tr td.selected")
		performSelection(companyTable,"cCharge")
		performSelection(employeeTable,"eCharge")

		document.getElementById("employeeTableIds").dataset.index.split(",").forEach(function(tableId){
			try{
			//Grouped Employee Charges
			var eTable = document.querySelectorAll(`#${tableId} tbody tr td.date`)
			performSelection(eTable,`${tableId}-epCharge`)
			//Grouped Employee Payroll
			var pTable = document.querySelectorAll(`#p${tableId} tbody tr td.date`)
			performSelection(pTable,`p${tableId}-pCharge`)
			}catch (e){
				//handle error
				console.log("Table is empty")
			}
		})
		performSelection(payrollTable,"pCharge")

	}catch (e){
		//handle error
				console.log("Table is empty")
			}
		function performSelection(data,id){
		for (var i=0; i < data.length;i++){
			var date = new Date(data[i].innerHTML)
			if (fDate <= date && tDate>=date ) {
				document.getElementById(`${id}-${i}`).classList.add("bg-blue-100", "selected")
				document.getElementById(`check-${id}-${i}`).checked = true
			}
		}	
	}

	})
  })
  </script>
	}
}

script showCreateInvoice() {
	document.getElementById("invoiceTable").classList.add("hidden")
	document.getElementById("createInvoiceDialog").classList.remove("hidden")
	//Add Listener to cancel all requests for main page
	  document.getElementById("employee-invoice-tbody").addEventListener("htmx:configRequest", function(e) {
            // Cancel the request
            e.preventDefault();
        
    },{ once: true });
	document.getElementById("company-invoice-tbody").addEventListener("htmx:configRequest", function(e) {   
            // Cancel the request
            e.preventDefault();
    },{ once: true });
}

script toggleTable(elementId string) {
	var x = document.getElementById(elementId);
	if (x.classList.contains("hidden")) {
		x.classList.remove("hidden");
		document.getElementById(elementId+"ShowIcon").classList.remove("fa-chevron-down");
		document.getElementById(elementId+"ShowIcon").classList.add("fa-chevron-up");
	} else {
		x.classList.add("hidden");
		document.getElementById(elementId+"ShowIcon").classList.remove("fa-chevron-up");
		document.getElementById(elementId+"ShowIcon").classList.add("fa-chevron-down");
	}
}

script closeInvoiceForm() {
	document.getElementById("invoiceTable").classList.remove("hidden")
	document.getElementById("createInvoiceDialog").classList.add("hidden")
}
